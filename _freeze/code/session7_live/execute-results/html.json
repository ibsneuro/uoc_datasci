{
  "hash": "3d0873cc5291a31f85e3097a5a98ef1b",
  "result": {
    "markdown": "---\ntitle: \"Session 7\"\nauthor: \"Ina\"\nformat: html\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(nycflights13)\n```\n:::\n\n\n## Joining data frames\n\nStart with a left-join example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights |> \n  select(year,month,day,dep_time,carrier,flight,origin,dest) |> \n  left_join(airlines, by = \"carrier\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 9\n    year month   day dep_time carrier flight origin dest  name                  \n   <int> <int> <int>    <int> <chr>    <int> <chr>  <chr> <chr>                 \n 1  2013     1     1      517 UA        1545 EWR    IAH   United Air Lines Inc. \n 2  2013     1     1      533 UA        1714 LGA    IAH   United Air Lines Inc. \n 3  2013     1     1      542 AA        1141 JFK    MIA   American Airlines Inc.\n 4  2013     1     1      544 B6         725 JFK    BQN   JetBlue Airways       \n 5  2013     1     1      554 DL         461 LGA    ATL   Delta Air Lines Inc.  \n 6  2013     1     1      554 UA        1696 EWR    ORD   United Air Lines Inc. \n 7  2013     1     1      555 B6         507 EWR    FLL   JetBlue Airways       \n 8  2013     1     1      557 EV        5708 LGA    IAD   ExpressJet Airlines I…\n 9  2013     1     1      557 B6          79 JFK    MCO   JetBlue Airways       \n10  2013     1     1      558 AA         301 LGA    ORD   American Airlines Inc.\n# ℹ 336,766 more rows\n```\n:::\n:::\n\n\nInner join to only look at Hawaiian and Alaskan airlines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairlines2 <- airlines |> \n  filter(carrier %in% c(\"HA\",\"AS\"))\n\nflights |> \n  select(year,month,day,dep_time,carrier,flight,origin,dest) |> \n  inner_join(airlines2, by = \"carrier\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,056 × 9\n    year month   day dep_time carrier flight origin dest  name                  \n   <int> <int> <int>    <int> <chr>    <int> <chr>  <chr> <chr>                 \n 1  2013     1     1      724 AS          11 EWR    SEA   Alaska Airlines Inc.  \n 2  2013     1     1      857 HA          51 JFK    HNL   Hawaiian Airlines Inc.\n 3  2013     1     1     1808 AS           7 EWR    SEA   Alaska Airlines Inc.  \n 4  2013     1     2      722 AS          11 EWR    SEA   Alaska Airlines Inc.  \n 5  2013     1     2      909 HA          51 JFK    HNL   Hawaiian Airlines Inc.\n 6  2013     1     2     1818 AS           7 EWR    SEA   Alaska Airlines Inc.  \n 7  2013     1     3      724 AS          11 EWR    SEA   Alaska Airlines Inc.  \n 8  2013     1     3      914 HA          51 JFK    HNL   Hawaiian Airlines Inc.\n 9  2013     1     3     1817 AS           7 EWR    SEA   Alaska Airlines Inc.  \n10  2013     1     4      725 AS          11 EWR    SEA   Alaska Airlines Inc.  \n# ℹ 1,046 more rows\n```\n:::\n:::\n\n\nUsing left join on our airlines2 data frame would produce missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights |> \n  select(year,month,day,dep_time,carrier,flight,origin,dest) |> \n  left_join(airlines2, by = \"carrier\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 9\n    year month   day dep_time carrier flight origin dest  name \n   <int> <int> <int>    <int> <chr>    <int> <chr>  <chr> <chr>\n 1  2013     1     1      517 UA        1545 EWR    IAH   <NA> \n 2  2013     1     1      533 UA        1714 LGA    IAH   <NA> \n 3  2013     1     1      542 AA        1141 JFK    MIA   <NA> \n 4  2013     1     1      544 B6         725 JFK    BQN   <NA> \n 5  2013     1     1      554 DL         461 LGA    ATL   <NA> \n 6  2013     1     1      554 UA        1696 EWR    ORD   <NA> \n 7  2013     1     1      555 B6         507 EWR    FLL   <NA> \n 8  2013     1     1      557 EV        5708 LGA    IAD   <NA> \n 9  2013     1     1      557 B6          79 JFK    MCO   <NA> \n10  2013     1     1      558 AA         301 LGA    ORD   <NA> \n# ℹ 336,766 more rows\n```\n:::\n:::\n\n\nJoining data frames with non-overlapping key names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather |> \n  select(origin:humid) |> \n  left_join(airports, by = c(\"origin\" = \"faa\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,115 × 15\n   origin  year month   day  hour  temp  dewp humid name         lat   lon   alt\n   <chr>  <int> <int> <int> <int> <dbl> <dbl> <dbl> <chr>      <dbl> <dbl> <dbl>\n 1 EWR     2013     1     1     1  39.0  26.1  59.4 Newark Li…  40.7 -74.2    18\n 2 EWR     2013     1     1     2  39.0  27.0  61.6 Newark Li…  40.7 -74.2    18\n 3 EWR     2013     1     1     3  39.0  28.0  64.4 Newark Li…  40.7 -74.2    18\n 4 EWR     2013     1     1     4  39.9  28.0  62.2 Newark Li…  40.7 -74.2    18\n 5 EWR     2013     1     1     5  39.0  28.0  64.4 Newark Li…  40.7 -74.2    18\n 6 EWR     2013     1     1     6  37.9  28.0  67.2 Newark Li…  40.7 -74.2    18\n 7 EWR     2013     1     1     7  39.0  28.0  64.4 Newark Li…  40.7 -74.2    18\n 8 EWR     2013     1     1     8  39.9  28.0  62.2 Newark Li…  40.7 -74.2    18\n 9 EWR     2013     1     1     9  39.9  28.0  62.2 Newark Li…  40.7 -74.2    18\n10 EWR     2013     1     1    10  41    28.0  59.6 Newark Li…  40.7 -74.2    18\n# ℹ 26,105 more rows\n# ℹ 3 more variables: tz <dbl>, dst <chr>, tzone <chr>\n```\n:::\n:::\n\n\n## Workinf with strings\n\nImport spotify data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nspotify <- read_csv(\"spotify_dataset.csv\") |> \n  clean_names()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1556 Columns: 23\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): Week of Highest Charting, Song Name, Artist, Song ID, Genre, Relea...\ndbl (14): Index, Highest Charting Position, Number of Times Charted, Artist ...\nnum  (1): Streams\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nglimpse(spotify)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,556\nColumns: 23\n$ index                     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1…\n$ highest_charting_position <dbl> 1, 2, 1, 3, 5, 1, 3, 2, 3, 8, 4, 9, 5, 1, 2,…\n$ number_of_times_charted   <dbl> 8, 3, 11, 5, 1, 18, 16, 10, 8, 10, 43, 9, 3,…\n$ week_of_highest_charting  <chr> \"2021-07-23--2021-07-30\", \"2021-07-23--2021-…\n$ song_name                 <chr> \"Beggin'\", \"STAY (with Justin Bieber)\", \"goo…\n$ streams                   <dbl> 48633449, 47248719, 40162559, 37799456, 3394…\n$ artist                    <chr> \"Måneskin\", \"The Kid LAROI\", \"Olivia Rodrigo…\n$ artist_followers          <dbl> 3377762, 2230022, 6266514, 83293380, 5473565…\n$ song_id                   <chr> \"3Wrjm47oTz2sjIgck11l5e\", \"5HCyWlXZPP0y6Gqq8…\n$ genre                     <chr> \"['indie rock italiano', 'italian pop']\", \"[…\n$ release_date              <chr> \"2017-12-08\", \"2021-07-09\", \"2021-05-21\", \"2…\n$ weeks_charted             <chr> \"2021-07-23--2021-07-30\\n2021-07-16--2021-07…\n$ popularity                <dbl> 100, 99, 99, 98, 96, 97, 94, 95, 96, 95, 89,…\n$ danceability              <dbl> 0.714, 0.591, 0.563, 0.808, 0.736, 0.610, 0.…\n$ energy                    <dbl> 0.800, 0.764, 0.664, 0.897, 0.704, 0.508, 0.…\n$ loudness                  <dbl> -4.808, -5.484, -5.044, -3.712, -7.409, -6.6…\n$ speechiness               <dbl> 0.0504, 0.0483, 0.1540, 0.0348, 0.0615, 0.15…\n$ acousticness              <dbl> 0.12700, 0.03830, 0.33500, 0.04690, 0.02030,…\n$ liveness                  <dbl> 0.3590, 0.1030, 0.0849, 0.3640, 0.0501, 0.38…\n$ tempo                     <dbl> 134.002, 169.928, 166.928, 126.026, 149.995,…\n$ duration_ms               <dbl> 211560, 141806, 178147, 231041, 212000, 1378…\n$ valence                   <dbl> 0.5890, 0.4780, 0.6880, 0.5910, 0.8940, 0.75…\n$ chord                     <chr> \"B\", \"C#/Db\", \"A\", \"B\", \"D#/Eb\", \"G#/Ab\", \"G…\n```\n:::\n:::\n\n\nUsing `str_sub()` to extract substrings:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify |> \n  mutate(chord_simplified = str_sub(chord,1,1)) |> \n  count(chord_simplified, sort=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 2\n  chord_simplified     n\n  <chr>            <int>\n1 C                  369\n2 G                  266\n3 F                  252\n4 A                  240\n5 D                  165\n6 B                  141\n7 E                  112\n8 <NA>                11\n```\n:::\n:::\n\n\n`str_detect()` detects patterns within a string.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify |> \n  filter(str_detect(genre,\"pop\")) |> \n  select(artist,song_name,genre)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 819 × 3\n   artist         song_name                         genre                       \n   <chr>          <chr>                             <chr>                       \n 1 Måneskin       Beggin'                           ['indie rock italiano', 'it…\n 2 Olivia Rodrigo good 4 u                          ['pop']                     \n 3 Ed Sheeran     Bad Habits                        ['pop', 'uk pop']           \n 4 Lil Nas X      INDUSTRY BABY (feat. Jack Harlow) ['lgbtq+ hip hop', 'pop rap…\n 5 Lil Nas X      MONTERO (Call Me By Your Name)    ['lgbtq+ hip hop', 'pop rap…\n 6 Doja Cat       Kiss Me More (feat. SZA)          ['dance pop', 'pop']        \n 7 Rauw Alejandro Todo De Ti                        ['puerto rican pop', 'trap …\n 8 Måneskin       I WANNA BE YOUR SLAVE             ['indie rock italiano', 'it…\n 9 Dua Lipa       Levitating (feat. DaBaby)         ['dance pop', 'pop', 'uk po…\n10 BTS            Permission to Dance               ['k-pop', 'k-pop boy group']\n# ℹ 809 more rows\n```\n:::\n:::\n\n\nUse `str_extract()` to extract patterns rather than just detect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify |> \n  mutate(genre_simple = str_extract(genre,\"pop\")) |> \n  select(artist,song_name,genre,genre_simple)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,556 × 4\n   artist         song_name                         genre           genre_simple\n   <chr>          <chr>                             <chr>           <chr>       \n 1 Måneskin       Beggin'                           ['indie rock i… pop         \n 2 The Kid LAROI  STAY (with Justin Bieber)         ['australian h… <NA>        \n 3 Olivia Rodrigo good 4 u                          ['pop']         pop         \n 4 Ed Sheeran     Bad Habits                        ['pop', 'uk po… pop         \n 5 Lil Nas X      INDUSTRY BABY (feat. Jack Harlow) ['lgbtq+ hip h… pop         \n 6 Lil Nas X      MONTERO (Call Me By Your Name)    ['lgbtq+ hip h… pop         \n 7 Doja Cat       Kiss Me More (feat. SZA)          ['dance pop', … pop         \n 8 Rauw Alejandro Todo De Ti                        ['puerto rican… pop         \n 9 Bad Bunny      Yonaguni                          ['latin', 'reg… <NA>        \n10 Måneskin       I WANNA BE YOUR SLAVE             ['indie rock i… pop         \n# ℹ 1,546 more rows\n```\n:::\n:::\n\n\nSplitting up information into different rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify |> \n  select(artist,song_name,genre) |> \n  separate_longer_delim(genre, delim=\",\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,665 × 3\n   artist         song_name                         genre                   \n   <chr>          <chr>                             <chr>                   \n 1 Måneskin       Beggin'                           \"['indie rock italiano'\"\n 2 Måneskin       Beggin'                           \" 'italian pop']\"       \n 3 The Kid LAROI  STAY (with Justin Bieber)         \"['australian hip hop']\"\n 4 Olivia Rodrigo good 4 u                          \"['pop']\"               \n 5 Ed Sheeran     Bad Habits                        \"['pop'\"                \n 6 Ed Sheeran     Bad Habits                        \" 'uk pop']\"            \n 7 Lil Nas X      INDUSTRY BABY (feat. Jack Harlow) \"['lgbtq+ hip hop'\"     \n 8 Lil Nas X      INDUSTRY BABY (feat. Jack Harlow) \" 'pop rap']\"           \n 9 Lil Nas X      MONTERO (Call Me By Your Name)    \"['lgbtq+ hip hop'\"     \n10 Lil Nas X      MONTERO (Call Me By Your Name)    \" 'pop rap']\"           \n# ℹ 4,655 more rows\n```\n:::\n:::\n\n\nA bit more on patterns ...\n\nFind all airports containing \"New\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairports |> \n  filter(str_detect(name,\"New\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 8\n   faa   name                               lat    lon   alt    tz dst   tzone  \n   <chr> <chr>                            <dbl>  <dbl> <dbl> <dbl> <chr> <chr>  \n 1 EHM   Cape Newenham Lrrs                58.6 -162.    541    -9 A     Americ…\n 2 ESN   Easton-Newnam Field Airport       38.8  -76.1    72    -5 A     Americ…\n 3 EWB   New Bedford Regional Airport      41.7  -71.0    80    -5 A     Americ…\n 4 EWK   Newton City-County Airport        38.1  -97.3  1533    -6 A     Americ…\n 5 EWR   Newark Liberty Intl               40.7  -74.2    18    -5 A     Americ…\n 6 GON   Groton New London                 41.3  -72.0     9    -5 A     Americ…\n 7 HVN   Tweed-New Haven Airport           41.3  -72.9    14    -5 A     Americ…\n 8 ILG   New Castle                        39.7  -75.6    79    -5 A     Americ…\n 9 JCI   New Century AirCenter Airport     38.8  -94.9  1087    -6 A     Americ…\n10 KNW   New Stuyahok Airport              59.4 -157.    302    -9 A     Americ…\n11 MSY   Louis Armstrong New Orleans Intl  30.0  -90.3     4    -6 A     Americ…\n12 NBG   New Orleans Nas Jrb               29.8  -90.0     3    -6 A     Americ…\n13 ONP   Newport Municipal Airport         44.6 -124.    160    -8 A     Americ…\n14 PHF   Newport News Williamsburg Intl    37.1  -76.5    43    -5 A     Americ…\n15 UUU   Newport State                     41.5  -71.3   172    -5 A     Americ…\n16 WWT   Newtok Airport                    60.9 -165.     25    -9 U     Americ…\n17 ZRP   Newark Penn Station               40.7  -74.2     0    -5 A     Americ…\n18 ZRZ   New Carrollton Rail Station       38.9  -76.9    39    -5 A     Americ…\n19 ZVE   New Haven Rail Station            41.3  -72.9     7    -5 A     Americ…\n```\n:::\n:::\n\n\nBut this is case sensitive\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairports |> \n  filter(str_detect(name,\"new\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n  faa   name               lat   lon   alt    tz dst   tzone            \n  <chr> <chr>            <dbl> <dbl> <dbl> <dbl> <chr> <chr>            \n1 GNU   Goodnews Airport  59.1 -162.    15    -9 A     America/Anchorage\n```\n:::\n:::\n\n\nUse a regular expression to look for upper and lower case n/N\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairports |> \n  filter(str_detect(name,\"[nN]ew\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 8\n   faa   name                               lat    lon   alt    tz dst   tzone  \n   <chr> <chr>                            <dbl>  <dbl> <dbl> <dbl> <chr> <chr>  \n 1 EHM   Cape Newenham Lrrs                58.6 -162.    541    -9 A     Americ…\n 2 ESN   Easton-Newnam Field Airport       38.8  -76.1    72    -5 A     Americ…\n 3 EWB   New Bedford Regional Airport      41.7  -71.0    80    -5 A     Americ…\n 4 EWK   Newton City-County Airport        38.1  -97.3  1533    -6 A     Americ…\n 5 EWR   Newark Liberty Intl               40.7  -74.2    18    -5 A     Americ…\n 6 GNU   Goodnews Airport                  59.1 -162.     15    -9 A     Americ…\n 7 GON   Groton New London                 41.3  -72.0     9    -5 A     Americ…\n 8 HVN   Tweed-New Haven Airport           41.3  -72.9    14    -5 A     Americ…\n 9 ILG   New Castle                        39.7  -75.6    79    -5 A     Americ…\n10 JCI   New Century AirCenter Airport     38.8  -94.9  1087    -6 A     Americ…\n11 KNW   New Stuyahok Airport              59.4 -157.    302    -9 A     Americ…\n12 MSY   Louis Armstrong New Orleans Intl  30.0  -90.3     4    -6 A     Americ…\n13 NBG   New Orleans Nas Jrb               29.8  -90.0     3    -6 A     Americ…\n14 ONP   Newport Municipal Airport         44.6 -124.    160    -8 A     Americ…\n15 PHF   Newport News Williamsburg Intl    37.1  -76.5    43    -5 A     Americ…\n16 UUU   Newport State                     41.5  -71.3   172    -5 A     Americ…\n17 WWT   Newtok Airport                    60.9 -165.     25    -9 U     Americ…\n18 ZRP   Newark Penn Station               40.7  -74.2     0    -5 A     Americ…\n19 ZRZ   New Carrollton Rail Station       38.9  -76.9    39    -5 A     Americ…\n20 ZVE   New Haven Rail Station            41.3  -72.9     7    -5 A     Americ…\n```\n:::\n:::\n\n\nJust look for \"New\" at the beginning of the name\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairports |> \n  filter(str_detect(name,\"^New\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 8\n   faa   name                             lat    lon   alt    tz dst   tzone    \n   <chr> <chr>                          <dbl>  <dbl> <dbl> <dbl> <chr> <chr>    \n 1 EWB   New Bedford Regional Airport    41.7  -71.0    80    -5 A     America/…\n 2 EWK   Newton City-County Airport      38.1  -97.3  1533    -6 A     America/…\n 3 EWR   Newark Liberty Intl             40.7  -74.2    18    -5 A     America/…\n 4 ILG   New Castle                      39.7  -75.6    79    -5 A     America/…\n 5 JCI   New Century AirCenter Airport   38.8  -94.9  1087    -6 A     America/…\n 6 KNW   New Stuyahok Airport            59.4 -157.    302    -9 A     America/…\n 7 NBG   New Orleans Nas Jrb             29.8  -90.0     3    -6 A     America/…\n 8 ONP   Newport Municipal Airport       44.6 -124.    160    -8 A     America/…\n 9 PHF   Newport News Williamsburg Intl  37.1  -76.5    43    -5 A     America/…\n10 UUU   Newport State                   41.5  -71.3   172    -5 A     America/…\n11 WWT   Newtok Airport                  60.9 -165.     25    -9 U     America/…\n12 ZRP   Newark Penn Station             40.7  -74.2     0    -5 A     America/…\n13 ZRZ   New Carrollton Rail Station     38.9  -76.9    39    -5 A     America/…\n14 ZVE   New Haven Rail Station          41.3  -72.9     7    -5 A     America/…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reclues)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}