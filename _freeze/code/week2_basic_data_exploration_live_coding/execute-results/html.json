{
  "hash": "e7b8d9e0f4c5386fd42671c952ecf23b",
  "result": {
    "markdown": "---\ntitle: \"Data exploration basics\"\nauthor: \"Ina\"\ndate: \"2023-11-08\"\ndate-format: long\nformat: \n  html:\n    self-contained: true\nexecute: \n  echo: true\n  warning: false\n  message: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Load packages\n\nWe start by loading the packages that we will need using the `library()` command.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n:::\n\n\n## Inspect data\n\nThe easiest way to inspect a data set is to simply type its name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n## Basic data exploration\n\n### Filtering observations\n\nUse `filter()` to only keep certain observations according to a criterion that you specify. For example, we might want to focus on Gentoo penguins.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(species == \"Gentoo\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 124 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           46.1          13.2               211        4500\n 2 Gentoo  Biscoe           50            16.3               230        5700\n 3 Gentoo  Biscoe           48.7          14.1               210        4450\n 4 Gentoo  Biscoe           50            15.2               218        5700\n 5 Gentoo  Biscoe           47.6          14.5               215        5400\n 6 Gentoo  Biscoe           46.5          13.5               210        4550\n 7 Gentoo  Biscoe           45.4          14.6               211        4800\n 8 Gentoo  Biscoe           46.7          15.3               219        5200\n 9 Gentoo  Biscoe           43.3          13.4               209        4400\n10 Gentoo  Biscoe           46.8          15.4               215        5150\n# ℹ 114 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(sex == \"female\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 165 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.5          17.4               186        3800\n 2 Adelie  Torgersen           40.3          18                 195        3250\n 3 Adelie  Torgersen           36.7          19.3               193        3450\n 4 Adelie  Torgersen           38.9          17.8               181        3625\n 5 Adelie  Torgersen           41.1          17.6               182        3200\n 6 Adelie  Torgersen           36.6          17.8               185        3700\n 7 Adelie  Torgersen           38.7          19                 195        3450\n 8 Adelie  Torgersen           34.4          18.4               184        3325\n 9 Adelie  Biscoe              37.8          18.3               174        3400\n10 Adelie  Biscoe              35.9          19.2               189        3800\n# ℹ 155 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  filter(body_mass_g > 4000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 172 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.2          19.6               195        4675\n 2 Adelie  Torgersen           42            20.2               190        4250\n 3 Adelie  Torgersen           34.6          21.1               198        4400\n 4 Adelie  Torgersen           42.5          20.7               197        4500\n 5 Adelie  Torgersen           46            21.5               194        4200\n 6 Adelie  Dream               39.2          21.1               196        4150\n 7 Adelie  Dream               39.8          19.1               184        4650\n 8 Adelie  Dream               44.1          19.7               196        4400\n 9 Adelie  Dream               39.6          18.8               190        4600\n10 Adelie  Dream               42.3          21.2               191        4150\n# ℹ 162 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n\n\n### Sorting observations\n\nTo sort by a particular column (e.g. `body_mass_g`), use `arrange()`. To sort in descending order add a minus sign (N.B. this works for numeric columns only; for other column types, use `desc()`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  arrange(body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species   island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>     <fct>             <dbl>         <dbl>             <int>       <int>\n 1 Chinstrap Dream              46.9          16.6               192        2700\n 2 Adelie    Biscoe             36.5          16.6               181        2850\n 3 Adelie    Biscoe             36.4          17.1               184        2850\n 4 Adelie    Biscoe             34.5          18.1               187        2900\n 5 Adelie    Dream              33.1          16.1               178        2900\n 6 Adelie    Torgers…           38.6          17                 188        2900\n 7 Chinstrap Dream              43.2          16.6               187        2900\n 8 Adelie    Biscoe             37.9          18.6               193        2925\n 9 Adelie    Dream              37.5          18.9               179        2975\n10 Adelie    Dream              37            16.9               185        3000\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n\n```{.r .cell-code}\npenguins |> \n  arrange(-body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           49.2          15.2               221        6300\n 2 Gentoo  Biscoe           59.6          17                 230        6050\n 3 Gentoo  Biscoe           51.1          16.3               220        6000\n 4 Gentoo  Biscoe           48.8          16.2               222        6000\n 5 Gentoo  Biscoe           45.2          16.4               223        5950\n 6 Gentoo  Biscoe           49.8          15.9               229        5950\n 7 Gentoo  Biscoe           48.4          14.6               213        5850\n 8 Gentoo  Biscoe           49.3          15.7               217        5850\n 9 Gentoo  Biscoe           55.1          16                 230        5850\n10 Gentoo  Biscoe           49.5          16.2               229        5800\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n### Combining operations\n\nUse the pipe (`|>`) to combine operations, e.g. to filter for female penguins and sort by descending flipper length:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# this is a comment\npenguins |> \n  filter(sex == \"female\") |> \n  arrange(-flipper_length_mm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 165 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           46.9          14.6               222        4875\n 2 Gentoo  Biscoe           49.1          14.8               220        5150\n 3 Gentoo  Biscoe           43.5          14.2               220        4700\n 4 Gentoo  Biscoe           45.8          14.2               219        4700\n 5 Gentoo  Biscoe           48.5          15                 219        4850\n 6 Gentoo  Biscoe           43.4          14.4               218        4600\n 7 Gentoo  Biscoe           47.5          15                 218        4950\n 8 Gentoo  Biscoe           43.6          13.9               217        4900\n 9 Gentoo  Biscoe           46.5          14.4               217        4900\n10 Gentoo  Biscoe           46.5          14.8               217        5200\n# ℹ 155 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  filter(species == \"Chinstrap\") |> \n  arrange(-body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 68 × 8\n   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Chinstrap Dream            52            20.7               210        4800\n 2 Chinstrap Dream            52.8          20                 205        4550\n 3 Chinstrap Dream            53.5          19.9               205        4500\n 4 Chinstrap Dream            50.8          18.5               201        4450\n 5 Chinstrap Dream            49.2          18.2               195        4400\n 6 Chinstrap Dream            54.2          20.8               201        4300\n 7 Chinstrap Dream            49            19.6               212        4300\n 8 Chinstrap Dream            46            18.9               195        4150\n 9 Chinstrap Dream            52            19                 197        4150\n10 Chinstrap Dream            51            18.8               203        4100\n# ℹ 58 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n\n### Compute summary statistics\n\nCompute summary statistics using `summarise()`. Start by calculating the mean. We need to add `na.rm=TRUE` here to tell R to remove missing values.\n\nThis is a good example of how R operates. It won't make assumptions for you about what you want to do, for example how to handle missing values. If you want these excluded from your data when calculating the mean, you will need to specify this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  mean_body_mass\n           <dbl>\n1          4202.\n```\n:::\n:::\n\n\nCalculate mean and standard deviation\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE),\n            sd_body_mass = sd(body_mass_g, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  mean_body_mass sd_body_mass\n           <dbl>        <dbl>\n1          4202.         802.\n```\n:::\n:::\n\n\nLook at mean and sd for Gentoos only:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  filter(species == \"Gentoo\") |> \n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE),\n            sd_body_mass = sd(body_mass_g, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  mean_body_mass sd_body_mass\n           <dbl>        <dbl>\n1          5076.         504.\n```\n:::\n:::\n\n\n### Compute summary statistics by group\n\n*Note: this was not covered in the week 2 workshop due to time constraints and will be discussed in week 3.*\n\nUse `group_by()` to create groups which are then applied in the next command, e.g. to compute mean and sd.\n\n\n::: {.cell}\n\n:::\n\n\n## Basic visualisation\n\nCreate a scatterplot with flipper length as a predictor of body mass.\nTo do so, we pipe the `penguins` data to the `ggplot()` function.\nThis function requires us to specify aesthetics (via `aes()`); these make clear how to map parts of the data onto components of the graph. \n\nIn a simple case, e.g. for a basic scatterplot, you will need to specify which variable to map onto the x-axis of the plot and which variable to map onto the y-axis.\n\nYou will also need to add one or more \"geoms\" (i.e. geometric objects). These specify the type of plot; e.g. `geom_point()` creates a scatterplot. \n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](week2_basic_data_exploration_live_coding_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nCreate the same type of plot but using bill length:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = flipper_length_mm, y = bill_length_mm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](week2_basic_data_exploration_live_coding_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nCreate a scatterplot using colour to differentiate between groups (e.g. different species of penguin):\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = flipper_length_mm, y = bill_length_mm, \n             colour = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](week2_basic_data_exploration_live_coding_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n*Note: the content below was not covered in the week 2 session due to time constraints and will be discussed in week 3.*\n\nA different way to compare groups is to separate the plot into different facets.\n\n\n::: {.cell}\n\n:::\n\n\nYou can also combine the two grouping methods, e.g to look at the role of both species and sex:\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "week2_basic_data_exploration_live_coding_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}