{
  "hash": "3795d1ff786fe3e92546a5ca313ceb08",
  "result": {
    "markdown": "---\ntitle: \"Week 5\"\nauthor: \"Ina\"\nformat: \n  html:\n    self-contained: true\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n::: {.callout-note}\nThe format of the header in this .qmd doc shows you how to create a self-contained document, with all styles, images etc. embedded. The indents are important so ensure that you replicate this structure exactly as given:\n\n![](images/self_contained.png)\n\n:::\n\n## Importing files\n\nUse `read_csv()` to read a csv file. Using the project-based approach as discussed in the workshop and assuming that your .qmd file and the .csv file are both in the project directory, you only need to specify the file name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios <- read_csv(\"student_teacher_ratios.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 180 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (15): indicator, country, country_code, edulit_ind, flag_codes, flags, n...\ndbl  (5): year, student_ratio, x, y, student_ratio_region\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nInspect the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 20\n   indicator      country country_code edulit_ind  year student_ratio flag_codes\n   <chr>          <chr>   <chr>        <chr>      <dbl>         <dbl> <chr>     \n 1 Primary Educa… Afghan… AFG          PTRHC_1     2017          44.0 <NA>      \n 2 Primary Educa… Albania ALB          PTRHC_1     2017          17.9 <NA>      \n 3 Primary Educa… Algeria DZA          PTRHC_1     2017          24.2 <NA>      \n 4 Primary Educa… Angola  AGO          PTRHC_1     2015          50.0 <NA>      \n 5 Primary Educa… Antigu… ATG          PTRHC_1     2017          12.1 <NA>      \n 6 Primary Educa… Argent… ARG          <NA>          NA          NA   <NA>      \n 7 Primary Educa… Armenia ARM          <NA>          NA          NA   <NA>      \n 8 Primary Educa… Austria AUT          PTRHC_1     2017          10.0 <NA>      \n 9 Primary Educa… Azerba… AZE          PTRHC_1     2017          15.5 <NA>      \n10 Primary Educa… Bahamas BHS          PTRHC_1     2016          19.0 <NA>      \n# ℹ 170 more rows\n# ℹ 13 more variables: flags <chr>, name <chr>, alpha.2 <chr>, alpha.3 <chr>,\n#   country.code <chr>, iso_3166.2 <chr>, region <chr>, sub.region <chr>,\n#   region.code <chr>, sub.region.code <chr>, x <dbl>, y <dbl>,\n#   student_ratio_region <dbl>\n```\n:::\n\n```{.r .cell-code}\nglimpse(st_ratios)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 180\nColumns: 20\n$ indicator            <chr> \"Primary Education\", \"Primary Education\", \"Primar…\n$ country              <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"A…\n$ country_code         <chr> \"AFG\", \"ALB\", \"DZA\", \"AGO\", \"ATG\", \"ARG\", \"ARM\", …\n$ edulit_ind           <chr> \"PTRHC_1\", \"PTRHC_1\", \"PTRHC_1\", \"PTRHC_1\", \"PTRH…\n$ year                 <dbl> 2017, 2017, 2017, 2015, 2017, NA, NA, 2017, 2017,…\n$ student_ratio        <dbl> 44.00995, 17.94478, 24.22505, 50.02951, 12.05576,…\n$ flag_codes           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ flags                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ name                 <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"A…\n$ alpha.2              <chr> \"AF\", \"AL\", \"DZ\", \"AO\", \"AG\", \"AR\", \"AM\", \"AT\", \"…\n$ alpha.3              <chr> \"AFG\", \"ALB\", \"DZA\", \"AGO\", \"ATG\", \"ARG\", \"ARM\", …\n$ country.code         <chr> \"004\", \"008\", \"012\", \"024\", \"028\", \"032\", \"051\", …\n$ iso_3166.2           <chr> \"ISO 3166-2:AF\", \"ISO 3166-2:AL\", \"ISO 3166-2:DZ\"…\n$ region               <chr> \"Asia\", \"Europe\", \"Africa\", \"Africa\", \"North Amer…\n$ sub.region           <chr> \"Southern Asia\", \"Southern Europe\", \"Northern Afr…\n$ region.code          <chr> \"142\", \"150\", \"002\", \"002\", \"019\", \"019\", \"142\", …\n$ sub.region.code      <chr> \"034\", \"039\", \"015\", \"017\", \"029\", \"005\", \"145\", …\n$ x                    <dbl> 22, 15, 13, 13, 7, 6, 20, 15, 21, 4, 20, 23, 8, 1…\n$ y                    <dbl> 8, 9, 11, 17, 4, 14, 6, 6, 7, 2, 9, 8, 6, 4, 5, 3…\n$ student_ratio_region <dbl> 19.64278, 13.01069, 36.38758, 36.38758, 16.18269,…\n```\n:::\n:::\n\n\nSelect the columns of interest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_sel <- st_ratios |> \n  select(country, region, student_ratio)\n\nst_ratios_sel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 3\n   country             region        student_ratio\n   <chr>               <chr>                 <dbl>\n 1 Afghanistan         Asia                   44.0\n 2 Albania             Europe                 17.9\n 3 Algeria             Africa                 24.2\n 4 Angola              Africa                 50.0\n 5 Antigua and Barbuda North America          12.1\n 6 Argentina           South America          NA  \n 7 Armenia             Asia                   NA  \n 8 Austria             Europe                 10.0\n 9 Azerbaijan          Asia                   15.5\n10 Bahamas             North America          19.0\n# ℹ 170 more rows\n```\n:::\n:::\n\n\n### Brief exploration of the student-teacher data\n\n#### 1. Which region has the highest variability?\n\nNote the use of a custom colour palette for the fill aesthetic and the use of a custom theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_sel |> \n  ggplot(aes(x = region, y = student_ratio, fill = region)) +\n  geom_boxplot() +\n  coord_flip() +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_bw() +\n  labs(\n    title = \"Student-teacher ratios\",\n    subtitle = \"by region\",\n    y = \"Student-to-teacher ratio\",\n    x = \"\",\n    fill = \"Continent\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](week5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nDisplay the same information using a violin plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_sel |> \n  ggplot(aes(x = region, y = student_ratio, colour = region)) +\n  geom_jitter(alpha = 0.5) +\n  geom_violin(alpha = 0.6) +\n  coord_flip() +\n  scale_colour_brewer(palette = \"Dark2\") +\n  theme_bw() +\n  guides(colour = \"none\") +\n  labs(\n    title = \"Student-teacher ratio\",\n    subtitle = \"by region\",\n    x = \"\",\n    y = \"Student-to-teacher ratio\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 15 rows containing non-finite values (`stat_ydensity()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](week5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n#### 2. Focus on the region that you identified in 1.\n\n##### Create a new dataframe just for this region. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_africa <- st_ratios_sel |> \n  filter(region == \"Africa\")\n\nst_ratios_africa\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 3\n   country                  region student_ratio\n   <chr>                    <chr>          <dbl>\n 1 Algeria                  Africa          24.2\n 2 Angola                   Africa          50.0\n 3 Benin                    Africa          43.6\n 4 Botswana                 Africa          22.6\n 5 Burkina Faso             Africa          40.7\n 6 Burundi                  Africa          49.6\n 7 Cabo Verde               Africa          21.1\n 8 Cameroon                 Africa          44.6\n 9 Central African Republic Africa          83.4\n10 Chad                     Africa          56.9\n# ℹ 40 more rows\n```\n:::\n:::\n\n\n##### Which country has the lowest ST-ratio in this region and which has the highest? What are these?\n\nPerhaps the simplest way to approach this is to use `arrange()` to sort the data in ascending and descending order.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_africa |> \n  arrange(student_ratio)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 3\n   country           region student_ratio\n   <chr>             <chr>          <dbl>\n 1 Seychelles        Africa          14.0\n 2 Tunisia           Africa          16.2\n 3 Mauritius         Africa          17.9\n 4 Comoros           Africa          18.9\n 5 Cabo Verde        Africa          21.1\n 6 Botswana          Africa          22.6\n 7 Equatorial Guinea Africa          23.2\n 8 Egypt             Africa          23.8\n 9 Algeria           Africa          24.2\n10 Liberia           Africa          27.1\n# ℹ 40 more rows\n```\n:::\n\n```{.r .cell-code}\nst_ratios_africa |> \n  arrange(-student_ratio)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 3\n   country                     region student_ratio\n   <chr>                       <chr>          <dbl>\n 1 Central African Republic    Africa          83.4\n 2 Malawi                      Africa          69.5\n 3 Rwanda                      Africa          57.9\n 4 Chad                        Africa          56.9\n 5 Mozambique                  Africa          52.4\n 6 Angola                      Africa          50.0\n 7 Burundi                     Africa          49.6\n 8 United Republic of Tanzania Africa          47.2\n 9 Guinea                      Africa          47.1\n10 South Sudan                 Africa          46.8\n# ℹ 40 more rows\n```\n:::\n:::\n\n\nA more principled way to extract the row with the highest or lowest value is to use `slice_min()` and `slice_max()`.\nAdding `pull(variable_name)` further allows you to extract the value in that cell for further use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_africa |> \n  slice_min(order_by = student_ratio, n = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  country    region student_ratio\n  <chr>      <chr>          <dbl>\n1 Seychelles Africa          14.0\n```\n:::\n\n```{.r .cell-code}\nst_ratios_africa |> \n  slice_max(order_by = student_ratio, n = 1) |> \n  pull(country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Central African Republic\"\n```\n:::\n:::\n\n\n\n##### Isolate the countries with a ST-ratio higher than the median and plot the ST-ratios for these using an ordered horizontal column graph (recall from the week 4 exercises how to change the order). Use an appealing colour for the columns and pick a theme for the plot that you like.\n\nHere, you might first compute the mean using summarise and then use the resulting value to filter the data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_africa |> \n  summarise(median_ratio = median(student_ratio, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  median_ratio\n         <dbl>\n1         36.4\n```\n:::\n\n```{.r .cell-code}\nst_ratios_africa |> \n  filter(student_ratio > 36.4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 3\n   country                  region student_ratio\n   <chr>                    <chr>          <dbl>\n 1 Angola                   Africa          50.0\n 2 Benin                    Africa          43.6\n 3 Burkina Faso             Africa          40.7\n 4 Burundi                  Africa          49.6\n 5 Cameroon                 Africa          44.6\n 6 Central African Republic Africa          83.4\n 7 Chad                     Africa          56.9\n 8 Congo                    Africa          44.4\n 9 Côte d'Ivoire            Africa          42.4\n10 Eritrea                  Africa          39.2\n# ℹ 13 more rows\n```\n:::\n:::\n\n\nAlternatively, you could again use `pull()` to extract the value from the data frame and save as a new object, which is then used to provide the value for the filter operation.\nThis has the advantage of making the code more robust to changes, if there is an update to the underlying dataset (e.g. ten countries are added, thus changing the median value), the code will still yield accurate results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian_st_africa <- st_ratios_africa |> \n  summarise(median_ratio = median(student_ratio, na.rm = TRUE)) |> \n  pull(median_ratio)\n\nst_ratios_africa |> \n  filter(student_ratio > median_st_africa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 3\n   country                  region student_ratio\n   <chr>                    <chr>          <dbl>\n 1 Angola                   Africa          50.0\n 2 Benin                    Africa          43.6\n 3 Burkina Faso             Africa          40.7\n 4 Burundi                  Africa          49.6\n 5 Cameroon                 Africa          44.6\n 6 Central African Republic Africa          83.4\n 7 Chad                     Africa          56.9\n 8 Congo                    Africa          44.4\n 9 Côte d'Ivoire            Africa          42.4\n10 Eritrea                  Africa          39.2\n# ℹ 13 more rows\n```\n:::\n:::\n\n\nFinally, you can compute the median within `filter()` itself and then plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_ratios_africa |> \n  filter(student_ratio > median(student_ratio, na.rm=TRUE)) |> \n  ggplot(aes(x = reorder(country,student_ratio), y = student_ratio)) +\n  geom_col(fill = \"palevioletred3\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    title = \" Student-teacher ratios in African countries\",\n    subtitle = \"for countries with higher-than-median ST-ratios\",\n    x = \"\",\n    y = \"Student-to-teacher ratio\"\n  )\n```\n\n::: {.cell-output-display}\n![](week5_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "week5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}